<?php

//https://vk.com/dev/objects/user

class USER
{
	var $id; //ИД пользователя
	var $first_name; //Имя
	var $last_name; //Фамилия
	var $deactivated; // удалена ли страница
	var $hidden; // можно ли обратиться пользователям не в контакте
}

class USER_INFO
{
	var $about; //О себе string
	var $activites; //Деятельность string
	var $bdate; //Дата рождения string
	var $blacklisted; //находится ли в чёрном списке integer
	var $blacklisted_by_me; //информация о том, находится ли пользователь в черном списке у текущего пользователя. integer
	var $books; //содержимое поля «Любимые книги» из профиля пользователя string
	var $can_post;  //информация о том, может ли текущий пользователь оставлять записи на стене. Возможные значения: integer
	var $can_see_all_posts; //информация о том, может ли текущий пользователь видеть чужие записи на стене. Возможные значения: integer
	var $can_see_audio; //информация о том, может ли текущий пользователь видеть аудиозаписи. Возможные значения: integer
	var $can_send_friend_request; //информация о том, будет ли отправлено уведомление пользователю о заявке в друзья от текущего пользователя. Возможные значения: integer
	var $can_write_private_message; //информация о том, может ли текущий пользователь отправить личное сообщение. Возможные значения: integer
	var $carrier; 	//информация о карьере пользователя. Объект, содержащий следующие поля: USER_CARRIER
	var $city;//информация о городе, указанном на странице пользователя в разделе «Контакты». Возвращаются следующие поля: CITY
	var $common_count; // количество общих друзей с текущим пользователем. integer
	var $connections; // бог знает что это проверить
	var $contacts;  // информация о телефонных номерах пользователя. Если данные указаны и не скрыты настройками приватности, возвращаются следующие поля: CONTACT_USER
	var $counters; //количество различных объектов у пользователя. Поле возвращается только в методе users.get при запросе информации об одном пользователе, с передачей access_token. 
	var $country; // информация о стране, указанной на странице пользователя в разделе «Контакты». Возвращаются следующие поля: USER_COUNTRY
	var $crop_photo; //возвращает данные о точках, по которым вырезаны профильная и миниатюрная фотографии пользователя. USER_PHOTO
	var $domain; // (string)короткий адрес страницы. Возвращается строка, содержащая короткий адрес страницы (например, andrew). Если он не назначен, возвращается "id"+user_id, например, id35828305.
	
}

class EDUCATION_USER
{
	var $university;// (integer) — идентификатор университета;
	var $university_name;// (string) — название университета;
	var $faculty; // (integer) — идентификатор факультета;
	var $faculty_name;// (string)— название факультета;
	var $graduation; //(integer) — год окончания.
}


class USER_PHOTO
{
	var $photo;// (object) — объект photo фотографии пользователя, из которой вырезается главное фото профиля.
	var $crop;// (object) — вырезанная фотография пользователя. Содержит следующие поля: CROP_USER
	var $rect //(object) — миниатюрная квадратная фотография, вырезанная из фотографии crop. Содержит набор полей, аналогичный объекту crop. CROP_USER
}

class CROP_USER
{
	var $x;// (number) — координата X левого верхнего угла в процентах;
	var $y;// (number) — координата Y левого верхнего угла в процентах;
	var $x2;// (number) — координата X правого нижнего угла в процентах;
	var $y2;// (number) — координата Y правого нижнего угла в процентах.
	
}

class USER_COUNTRY
{
   var $id;// (integer) — идентификатор страны, который можно использовать для получения ее названия с помощью метода database.getCountriesById;
   var $title;// (string) — название страны.	
}

class USER_COUNTER
{
var $albums;// (integer) — количество фотоальбомов;
var $videos; //(integer) — количество видеозаписей;
var $audios; //(integer) — количество аудиозаписей;
var $photos (integer) — количество фотографий;
notes (integer) — количество заметок;
friends (integer) — количество друзей;
groups (integer) — количество сообществ;
online_friends (integer) — количество друзей онлайн;
mutual_friends (integer) — количество общих друзей;
user_videos (integer) — количество видеозаписей с пользователем;
followers (integer) — количество подписчиков;
pages (integer) — количество объектов в блоке «Интересные страницы».
	
	
	
	
}


class CONTACT_USER
{
var $mobile_phone;// (string) — номер мобильного телефона пользователя (только для Standalone-приложений);
var $home_phone;// (string) — дополнительный номер телефона пользователя.
} 

class CITY
{
	var $id;// (integer) — идентификатор города, который можно использовать для получения его названия с помощью метода database.getCitiesById;
	var $title;// (string) — название города.	
}

class USER_CARRIER
{
	var $group_id;// (integer) — идентификатор сообщества (если доступно, иначе company);
	var $company;// (string) — название компании (если доступно, иначе group_id);
	var $country_id;// (integer) — идентификатор страны;
	var $city_id;// (integer) — идентификатор города (если доступно, иначе city_name);
	var $city_name;// (string) — название города (если доступно, иначе city_id);
	var $from;// (integer) — год начала работы;
	var $until;// (integer) — год окончания работы;
	var &position;// (string) — должность.
}





?>